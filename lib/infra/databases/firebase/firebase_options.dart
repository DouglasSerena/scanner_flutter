// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:scanner_flutter/shared/environment.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions android = FirebaseOptions(
    appId: Environment.get("FIREBASE_APP_ID_ANDROID"),
    apiKey: Environment.get("FIREBASE_API_KEY_ANDROID"),
    projectId: Environment.get("FIREBASE_PROJECT_ID_ANDROID"),
    storageBucket: Environment.get("FIREBASE_STORAGE_BUCKET_ANDROID"),
    messagingSenderId: Environment.get("FIREBASE_MESSAGING_SENDER_ID_ANDROID"),
  );

  static FirebaseOptions ios = FirebaseOptions(
    appId: Environment.get("FIREBASE_APP_ID_IOS"),
    apiKey: Environment.get("FIREBASE_API_KEY_IOS"),
    projectId: Environment.get("FIREBASE_PROJECT_ID_IOS"),
    iosClientId: Environment.get("FIREBASE_IOS_CLIENT_ID_IOS"),
    iosBundleId: Environment.get("FIREBASE_IOS_BUNDLE_ID_IOS"),
    storageBucket: Environment.get("FIREBASE_STORAGE_BUCKET_IOS"),
    messagingSenderId: Environment.get("FIREBASE_MESSAGING_SENDER_ID_IOS"),
  );
}
